<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard - VME App</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css">
    <link rel="stylesheet" href="/css/style.css">
</head>
<body>
    <%- include('partials/navbar') %>
    <main style="padding: 0 2rem;">
        <div class="container-fluid">
            <header class="page-header">
                <div>
                    <h1 style="font-size: 1.875rem;">Admin Dashboard</h1>
                    <p style="margin: 0;">System overview and management.</p>
                </div>
            </header>

            <% if (typeof stats !== 'undefined') { %>
            <div class="row g-4 mb-5">
                <div class="col-lg-4"><div class="card stat-card"><div class="stat-title">Total Users</div><div class="stat-value"><%= stats.totalUsers %></div></div></div>
                <div class="col-lg-4"><div class="card stat-card"><div class="stat-title">Pending Approvals</div><div class="stat-value"><%= stats.pendingUsers %></div></div></div>
                <div class="col-lg-4"><div class="card stat-card"><div class="stat-title">Total Check-ins</div><div class="stat-value"><%= stats.totalCheckins %></div></div></div>
            </div>
            <% } %>

            <ul class="nav nav-tabs" id="adminTab" role="tablist">
                <li class="nav-item" role="presentation"><button class="nav-link active" data-bs-toggle="tab" data-bs-target="#users-tab-pane" type="button">User Management</button></li>
                <li class="nav-item" role="presentation"><button class="nav-link" data-bs-toggle="tab" data-bs-target="#checkins-tab-pane" type="button">Check-in History</button></li>
                <li class="nav-item" role="presentation"><button class="nav-link" data-bs-toggle="tab" data-bs-target="#orders-tab-pane" type="button">Sales Orders</button></li>
                <li class="nav-item" role="presentation"><button class="nav-link" data-bs-toggle="tab" data-bs-target="#map-tab-pane" type="button">Live Map</button></li>
            </ul>

            <div class="tab-content" id="adminTabContent">
                <div class="tab-pane fade show active" id="users-tab-pane" role="tabpanel">
                    <div class="card">
                        <div class="card-header"><input type="text" id="userSearch" class="form-control" placeholder="Search users by name or username..."></div>
                        <div class="card-body p-0"><div class="table-responsive">
                        <table class="table" id="userTable">
                            <thead><tr><th>Username</th><th>Full Name</th><th>Role</th><th style="width: 350px;">Actions</th></tr></thead>
                            <tbody><% users.forEach(u => { %>
                                <tr data-search="<%= (u.username || '').toLowerCase() %> <%= (u.firstName || '').toLowerCase() %> <%= (u.lastName || '').toLowerCase() %>">
                                <td><strong><%= u.username || 'N/A' %></strong></td>
                                <td><%= u.firstName || '' %> <%= u.lastName || '' %></td>
                                <td><%= u.role %></td>
                                <td><form action="/admin/assign-role" method="POST" style="display: flex; gap: 10px;"><input type="hidden" name="userId" value="<%= u._id %>"><select name="role" class="form-control form-control-sm"><option value="Pending" <%= u.role === 'Pending' ? 'selected' : '' %>>Pending</option><option value="MSR" <%= u.role === 'MSR' ? 'selected' : '' %>>MSR</option><option value="KAS" <%= u.role === 'KAS' ? 'selected' : '' %>>KAS</option><option value="Accounting" <%= u.role === 'Accounting' ? 'selected' : '' %>>Accounting</option><option value="Admin" <%= u.role === 'Admin' ? 'selected' : '' %>>Admin</option></select><button type="submit" class="btn btn-primary btn-sm">Assign</button></form></td>
                            </tr><% }) %></tbody>
                        </table>
                    </div></div></div>
                </div>
                <div class="tab-pane fade" id="checkins-tab-pane" role="tabpanel">
                    <div class="card">
                        <div class="card-header"><input type="text" id="checkinSearch" class="form-control" placeholder="Search check-ins..."></div>
                        <div class="card-body p-0"><div class="table-responsive">
                        <table class="table" id="checkinTable">
                            <thead><tr><th>User</th><th>Hospital</th><th>Activity</th><th>Proof</th><th>Signature</th><th>Timestamp</th></tr></thead>
                            <tbody><% if(checkins.length > 0) { checkins.forEach(checkin => { %>
                                <tr data-search="<%= (checkin.user?.username || '').toLowerCase() %> <%= (checkin.hospital?.name || '').toLowerCase() %> <%= (checkin.activity || '').toLowerCase() %>">
                                <td><%= checkin.user?.username || 'N/A' %></td>
                                <td><%= checkin.hospital?.name || 'N/A' %></td>
                                <td><%= checkin.activity %></td>
                                <td><% if (checkin.proof) { %><img src="<%= checkin.proof %>" alt="Proof" width="70" onclick="showImageInModal('<%= checkin.proof %>')"><% } else { %>N/A<% } %></td>
                                <td><% if (checkin.signature) { %><img src="<%= checkin.signature %>" alt="Signature" width="70" style="background-color: #fafafa;" onclick="showImageInModal('<%= checkin.signature %>')"><% } else { %>N/A<% } %></td>
                                <td><%= new Date(checkin.location.timestamp).toLocaleString() %></td>
                            </tr><% })} else { %><tr><td colspan="6" class="text-center p-5">No check-in history found.</td></tr><% } %></tbody>
                        </table>
                    </div></div></div>
                </div>
                <div class="tab-pane fade" id="orders-tab-pane" role="tabpanel">
                     <div class="card">
                         <div class="card-header"><input type="text" id="orderSearch" class="form-control" placeholder="Search orders..."></div>
                         <div class="card-body p-0"><div class="table-responsive">
                         <table class="table" id="orderTable">
                             <thead><tr><th>User</th><th>Reference</th><th>Customer</th><th>Status</th><th>Actions</th></tr></thead>
                             <tbody id="order-table-body">
                                <% if(orders.length > 0) { orders.forEach(order => { %>
                                 <tr data-search="<%= (order.user?.username || '').toLowerCase() %> <%= (order.user?.firstName || '').toLowerCase() %> <%= (order.user?.lastName || '').toLowerCase() %> <%= (order.reference || '').toLowerCase() %> <%= (order.customerName || '').toLowerCase() %> <%= (order.status || '').toLowerCase() %>">
                                 <td><%= order.user?.username || 'N/A' %></td>
                                 <td><strong><%= order.reference %></strong></td>
                                 <td><%= order.customerName %></td>
                                 <td><span class="badge <%= order.status.includes('Processed') || order.status.includes('Shipped') || order.status.includes('Delivered') ? 'badge-success' : 'badge-warning' %>"><%= order.status %></span></td>
                                 <td><button class="btn btn-sm btn-info view-order-btn" data-order-id="<%= order._id %>">View</button></td>
                             </tr><% })} else { %><tr><td colspan="5" class="text-center p-5">No sales orders found.</td></tr><% } %>
                            </tbody>
                         </table>
                     </div></div></div>
                </div>
                <div class="tab-pane fade" id="map-tab-pane" role="tabpanel">
                    <div class="card"><div class="card-body">
                        <div id="map" style="height: 600px; border-radius: 0.5rem;"></div>
                    </div></div>
                </div>
            </div>
        </div>
    </main>
    
    <%- include('partials/order-detail-modal.ejs') %>
    <div class="modal fade" id="imageZoomModal" tabindex="-1"><div class="modal-dialog modal-lg modal-dialog-centered"><div class="modal-content"><div class="modal-body text-center"><img src="" id="modalZoomImage" class="img-fluid"></div></div></div></div>
    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    
    <script>
    document.addEventListener('DOMContentLoaded', () => {
        // --- INITIAL SETUP ---
        const initialUsers = <%- JSON.stringify(users) %>;
        const currentUser = <%- JSON.stringify(user) %>;
        const imageZoomModal = new bootstrap.Modal(document.getElementById('imageZoomModal'));
        const modalZoomImage = document.getElementById('modalZoomImage');
        const orderDetailModalEl = document.getElementById('orderDetailModal');
        const orderDetailModal = new bootstrap.Modal(orderDetailModalEl);
        const socket = io();
        let currentOrderId = null;
        let map;
        const markers = {};

        // --- MODAL AND MAP FUNCTIONS ---
        function showImageInModal(src) {
            if (modalZoomImage) {
                modalZoomImage.src = src;
                imageZoomModal.show();
            }
        }

        function appendMessage(msg, currentUserId) {
            const chatBox = document.getElementById('modal_chatMessages');
            if (!chatBox || !msg.user) return;
            const isSent = msg.user._id === currentUserId;
            const messageClass = isSent ? 'chat-message-sent' : 'chat-message-received';
            const profilePic = msg.user.profilePicture || 'https://via.placeholder.com/150';
            chatBox.innerHTML += `<div class="chat-message ${messageClass}"><img src="${profilePic}" class="chat-profile-pic"><div class="chat-bubble"><div class="username">${msg.user.username}</div>${msg.text}<div class="timestamp">${new Date(msg.createdAt).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</div></div></div>`;
            chatBox.scrollTop = chatBox.scrollHeight;
        }
        
        async function viewOrder(orderId) {
            try {
                const response = await fetch(`/order/${orderId}`);
                if (!response.ok) {
                    throw new Error(`Server responded with status: ${response.status}`);
                }
                const data = await response.json();
                
                orderDetailModalEl.dataset.orderData = JSON.stringify(data);
                orderDetailModal.show();

            } catch (error) {
                console.error("Failed to fetch order data:", error);
                alert("Could not load order details. Check the console for more info.");
            }
        }

        // --- EVENT LISTENERS ---
        orderDetailModalEl.addEventListener('shown.bs.modal', function (event) {
            const data = JSON.parse(event.currentTarget.dataset.orderData);
            const { order, messages, currentUser: modalCurrentUser } = data;
            
            currentOrderId = order._id;

            document.getElementById('orderUpdateForm').action = `/order/${order._id}/update`;
            document.getElementById('modal_customerName_header').innerText = `Invoice for: ${order.customerName}`;
            document.getElementById('modal_reference').innerText = order.reference;

            const invoiceContainer = document.getElementById('invoice_details_container');
            const footerContainer = document.getElementById('modal_footer');
            const messageFormContainer = document.getElementById('modal_messageFormContainer');
            
            invoiceContainer.innerHTML = '';
            footerContainer.innerHTML = '<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>';
            
            if (modalCurrentUser.role === 'Accounting') {
                let productFields = '';
                order.products.forEach((p, index) => {
                    productFields += `
                        <div class="row g-2 mb-2 align-items-center">
                            <div class="col-sm-7"><input type="text" class="form-control form-control-sm" name="products[${index}][product]" value="${p.product || ''}"></div>
                            <div class="col-sm-2"><input type="number" class="form-control form-control-sm" name="products[${index}][quantity]" value="${p.quantity || 0}"></div>
                            <div class="col-sm-3"><input type="number" step="0.01" class="form-control form-control-sm" name="products[${index}][price]" value="${(p.price || 0).toFixed(2)}"></div>
                        </div>`;
                });
                invoiceContainer.innerHTML = `
                    <h6>Order Status</h6><select name="status" class="form-select mb-3">
                        <option value="Pending" ${order.status === 'Pending' ? 'selected' : ''}>Pending</option>
                        <option value="Awaiting Approval" ${order.status === 'Awaiting Approval' ? 'selected' : ''}>Awaiting Approval</option>
                        <option value="Processing" ${order.status === 'Processing' ? 'selected' : ''}>Processing</option>
                        <option value="Order Shipped" ${order.status === 'Order Shipped' ? 'selected' : ''}>Order Shipped</option>
                        <option value="Delivered" ${order.status === 'Delivered' ? 'selected' : ''}>Delivered</option>
                        <option value="Rejected" ${order.status === 'Rejected' ? 'selected' : ''}>Rejected</option>
                        <option value="Cancelled" ${order.status === 'Cancelled' ? 'selected' : ''}>Cancelled</option>
                    </select>
                    <h6>Payment Status</h6><select name="paymentStatus" class="form-select mb-4">
                        <option value="Unpaid" ${order.paymentStatus === 'Unpaid' ? 'selected' : ''}>Unpaid</option>
                        <option value="Paid" ${order.paymentStatus === 'Paid' ? 'selected' : ''}>Paid</option>
                    </select>
                    <h6>Products</h6>${productFields}`;
                footerContainer.innerHTML += '<button type="submit" class="btn btn-primary">Save Changes</button>';
            } else {
                let productsTableRows = '';
                order.products.forEach(p => { productsTableRows += `<tr><td>${p.product}</td><td>${p.quantity}</td><td>₱${(p.price || 0).toFixed(2)}</td><td>₱${(p.total || 0).toFixed(2)}</td></tr>`; });
                invoiceContainer.innerHTML = `
                    <p><strong>Status:</strong> <span class="badge ${order.status.includes('Processed') || order.status.includes('Shipped') || order.status.includes('Delivered') ? 'badge-success' : 'badge-warning'}">${order.status}</span></p>
                    <p><strong>Payment:</strong> <span class="badge ${order.paymentStatus === 'Paid' ? 'badge-success' : 'badge-danger'}">${order.paymentStatus}</span></p>
                    <div class="table-responsive"><table class="table table-sm">
                        <thead><tr><th>Product</th><th>Qty</th><th>Price</th><th>Total</th></tr></thead>
                        <tbody>${productsTableRows}</tbody>
                        <tfoot><tr><th colspan="3" class="text-end">Total:</th><th class="text-nowrap">₱${(order.subtotal || 0).toFixed(2)}</th></tr></tfoot>
                    </table></div>`;
            }
            
            const chatBox = document.getElementById('modal_chatMessages');
            chatBox.innerHTML = '';
            messages.forEach(msg => appendMessage(msg, modalCurrentUser._id));

            messageFormContainer.innerHTML = `<form id="modal_messageForm"><div class="input-group"><input type="text" id="modal_messageText" class="form-control" placeholder="Type a message..." required><button class="btn btn-primary" type="submit">Send</button></div></form>`;
            document.getElementById('modal_messageForm').addEventListener('submit', (e) => {
                e.preventDefault();
                const messageInput = document.getElementById('modal_messageText');
                if (messageInput.value && currentOrderId) {
                    socket.emit('sendMessage', { orderId: currentOrderId, userId: currentUser.id, text: messageInput.value });
                    messageInput.value = '';
                }
            });
            socket.emit('joinOrder', order._id);
        });
        
        socket.on('newMessage', (msg) => {
            if (msg.order === currentOrderId) {
                appendMessage(msg, currentUser.id);
            }
        });

        const orderTableBody = document.getElementById('order-table-body');
        if (orderTableBody) {
            orderTableBody.addEventListener('click', (event) => {
                const viewButton = event.target.closest('.view-order-btn');
                if (viewButton) {
                    const orderId = viewButton.dataset.orderId;
                    if (orderId) {
                        viewOrder(orderId);
                    }
                }
            });
        }

        const mapTab = document.querySelector('button[data-bs-target="#map-tab-pane"]');
        if (mapTab) {
            mapTab.addEventListener('shown.bs.tab', event => {
                if (!map) {
                    map = L.map('map').setView([12.8797, 121.7740], 6);
                    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);
                    initialUsers.forEach(user => {
                        if (user.location && user.location.lat && user.location.lng) {
                            markers[user._id] = L.marker([user.location.lat, user.location.lng]).addTo(map).bindPopup(user.username);
                        }
                    });
                }
            });
        }
        
        socket.on('locationUpdate', ({ userId, lat, lng }) => {
            const user = initialUsers.find(u => u._id === userId);
            if (!user) return;
            if (markers[userId]) {
                markers[userId].setLatLng([lat, lng]);
            } else {
                if (map) { markers[userId] = L.marker([lat, lng]).addTo(map).bindPopup(user.username); }
            }
        });

        const addTableFilter = (inputId, tableId) => {
            const searchInput = document.getElementById(inputId);
            if (searchInput) {
                searchInput.addEventListener('input', (e) => {
                    const searchTerm = e.target.value.toLowerCase();
                    document.querySelectorAll(`#${tableId} tbody tr`).forEach(row => {
                        row.style.display = (row.dataset.search || '').includes(searchTerm) ? '' : 'none';
                    });
                });
            }
        };
        addTableFilter('userSearch', 'userTable');
        addTableFilter('checkinSearch', 'checkinTable');
        addTableFilter('orderSearch', 'orderTable');
    });
    </script>
    
</body>
</html>