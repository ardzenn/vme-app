<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= transaction.type %> Details - VME App</title>
    <%- include('partials/header-meta') %>
</head>
<body data-user-id="<%= currentUser._id %>" data-transaction-id="<%= transaction._id %>">
    <%- include('partials/navbar') %>

    <main class="container my-5">
        <header class="page-header">
            <div>
                <h1><%= transaction.type %> Details</h1>
                <p class="text-muted">Submitted by: <strong><%= transaction.user.firstName %> <%= transaction.user.lastName %></strong> on <%= new Date(transaction.createdAt).toLocaleDateString() %></p>
            </div>
            <a href="/transactions/history" class="btn btn-secondary">Back to History</a>
        </header>

        <div class="row g-4">
            <div class="col-lg-7">
                <div class="card">
                    <div class="card-body">
                        <% if (transaction.type === 'Collection') { %>
                            <h5 class="card-title mb-3">Collection Information</h5>
                            <p><strong>Customer:</strong> <%= transaction.customer || 'N/A' %></p>
                            <p><strong>Date Collected:</strong> <%= transaction.dateCollected ? new Date(transaction.dateCollected).toLocaleDateString() : 'N/A' %></p>
                            <p><strong>PR/CR:</strong> <%= transaction.prCr || 'N/A' %></p>
                            <p><strong>S.I/D.R:</strong> <%= transaction.siDr || 'N/A' %></p>
                            <p><strong>Date of Check:</strong> <%= transaction.dateOfCheck ? new Date(transaction.dateOfCheck).toLocaleDateString() : 'N/A' %></p>
                            <p><strong>Bank/Check No.:</strong> <%= transaction.bankCheckNo || 'N/A' %></p>
                            <p><strong>Amount:</strong> â‚±<%= (transaction.amount || 0).toLocaleString() %></p>
                        <% } else { %>
                            <h5 class="card-title mb-3">Deposit Information</h5>
                            <p><strong>Details:</strong> <%= transaction.details || 'N/A' %></p>
                            <p><strong>Hospital:</strong> <%= transaction.hospital || 'N/A' %></p>
                            <p><strong>Date Deposited:</strong> <%= transaction.dateDeposited ? new Date(transaction.dateDeposited).toLocaleDateString() : 'N/A' %></p>
                            <p><strong>Payment Method:</strong> <%= transaction.paymentMethod || 'N/A' %></p>
                            <p><strong>Total Amount Deposited:</strong> â‚±<%= (transaction.totalAmountDeposited || 0).toLocaleString() %></p>
                        <% } %>
                        <hr>
                        <h5>Attachment</h5>
                        <a href="<%= transaction.attachmentUrl %>" target="_blank" class="btn btn-outline-primary">View Attached File</a>
                    </div>
                </div>
            </div>

            <div class="col-lg-5">
                <div class="card">
                    <div class="card-header"><h5 class="mb-0">Communication</h5></div>
                    <div class="card-body chat-container">
                        <div id="chat-messages" class="chat-messages flex-grow-1">
                            </div>
                        <div class="chat-input-area mt-3">
                            <input type="file" id="chat-file-input" name="commentAttachment" style="display: none;">
                            <button id="chat-attach-btn" class="btn btn-secondary" type="button" title="Attach file">ðŸ“Ž</button>
                            <input type="text" id="chat-message-text" class="form-control" placeholder="Type a comment...">
                            <button id="send-message-btn" class="btn btn-primary" type="button">Send</button>
                        </div>
                        <div id="chat-attachment-preview" class="mt-2" style="display: none;"></div>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const currentUserId = document.body.dataset.userId;
            const transactionId = document.body.dataset.transactionId;
            const socket = io({ query: { userId: currentUserId } });

            const chatBox = document.getElementById('chat-messages');
            const messageInput = document.getElementById('chat-message-text');
            const sendBtn = document.getElementById('send-message-btn');
            const attachBtn = document.getElementById('chat-attach-btn');
            const fileInput = document.getElementById('chat-file-input');
            const attachmentPreview = document.getElementById('chat-attachment-preview');
            let attachedFile = null;

            socket.emit('joinTransactionRoom', transactionId);

            function appendComment(comment) {
                const isSent = comment.user._id === currentUserId;
                const messageClass = isSent ? 'chat-message-sent' : 'chat-message-received';
                const profilePic = comment.user.profilePicture || '/images/default-profile.png';
                const timestamp = new Date(comment.createdAt).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
                const userName = comment.user.firstName || 'User';

                let attachmentHTML = '';
                if (comment.attachmentUrl) {
                    if (/\.(jpg|jpeg|png|gif|webp)$/i.test(comment.attachmentUrl)) {
                        attachmentHTML = `<a href="${comment.attachmentUrl}" target="_blank"><img src="${comment.attachmentUrl}" class="chat-attachment-img"></a>`;
                    } else {
                        const filename = comment.attachmentUrl.split('/').pop();
                        attachmentHTML = `<a href="${comment.attachmentUrl}" target="_blank" class="chat-attachment-file">ðŸ“„ ${filename}</a>`;
                    }
                }
                
                const messageHTML = `
                    <div class="chat-message ${messageClass}">
                        <img src="${profilePic}" class="chat-profile-pic">
                        <div class="chat-bubble">
                            <div class="username">${userName}</div>
                            ${comment.text ? `<div class="chat-text">${comment.text}</div>` : ''}
                            ${attachmentHTML}
                            <div class="timestamp">${timestamp}</div>
                        </div>
                    </div>`;
                chatBox.innerHTML += messageHTML;
                chatBox.scrollTop = chatBox.scrollHeight;
            }

            const initialComments = <%- JSON.stringify(transaction.comments) %>;
            initialComments.forEach(comment => appendComment(comment));

            socket.on('newTransactionComment', (comment) => {
                appendComment(comment);
            });

            const handleSendMessage = async () => {
                let attachmentUrl = null;
                if (attachedFile) {
                    const formData = new FormData();
                    formData.append('attachment', attachedFile);
                    try {
                        const response = await fetch(`/transactions/${transactionId}/comment/attach`, { method: 'POST', body: formData });
                        const result = await response.json();
                        if (result.success) {
                            attachmentUrl = result.url;
                        } else { throw new Error('File upload failed'); }
                    } catch (error) {
                        alert('Could not upload the file.'); return;
                    }
                }
                const text = messageInput.value.trim();
                if (text || attachmentUrl) {
                    socket.emit('sendTransactionComment', { transactionId, userId: currentUserId, text, attachmentUrl });
                    messageInput.value = '';
                    attachedFile = null;
                    fileInput.value = '';
                    attachmentPreview.style.display = 'none';
                }
            };

            sendBtn.onclick = handleSendMessage;
            messageInput.onkeydown = (e) => { if (e.key === 'Enter' && !e.shiftKey) { e.preventDefault(); handleSendMessage(); } };
            attachBtn.onclick = () => fileInput.click();

            fileInput.onchange = () => {
                if (fileInput.files.length > 0) {
                    attachedFile = fileInput.files[0];
                    if (attachedFile.type.startsWith('image/')) {
                        const reader = new FileReader();
                        reader.onload = (e) => { attachmentPreview.innerHTML = `<span><img src="${e.target.result}" style="width: 30px; height: 30px; object-fit: cover; margin-right: 5px;"> ${attachedFile.name}</span> <button type="button" class="btn-close btn-sm"></button>`; };
                        reader.readAsDataURL(attachedFile);
                    } else {
                        attachmentPreview.innerHTML = `<span>ðŸ“„ ${attachedFile.name}</span> <button type="button" class="btn-close btn-sm"></button>`;
                    }
                    attachmentPreview.style.display = 'flex';
                }
            };
            attachmentPreview.onclick = (e) => {
                if (e.target.classList.contains('btn-close')) {
                    attachedFile = null;
                    fileInput.value = '';
                    attachmentPreview.style.display = 'none';
                }
            };
        });
    </script>
</body>
</html>